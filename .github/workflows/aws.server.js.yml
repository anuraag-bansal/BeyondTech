name: aws.server.js CI

on:
  push:
    branches: [main]
    paths:
      - "**"
# Here we configure it to trigger restart on all repo updates

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: [self-hosted, aws-server]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: ðŸš€ Checkout Code
        uses: actions/checkout@v2

      - name: ðŸ”§ Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: ðŸ“¦ Create `.env` File
        run: |
          touch .env
          echo ENVIRONMENT=${{ secrets.ENVIRONMENT }} >> .env
          echo MONGO_URL=${{ secrets.MONGO_URL }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          cat .env

      - name: ðŸ“¦ Install Backend Dependencies
        run: |
          cd backend
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: ðŸ“¦ Install Frontend Dependencies & Build
        run: |
          cd frontend
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
          npm run build

      - name: ðŸ”„ Deploy to Server & Restart Services
        run: |
          cd /var/www/fullstack-app
          git pull origin main
          
          cd backend
          npm install
          
          # âœ… Restart all PM2 processes
          pm2 restart all

          cd ../frontend
          npm run build
          sudo cp -r build/* /var/www/html/  # âœ… Deploy frontend to Nginx

